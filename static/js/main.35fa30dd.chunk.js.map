{"version":3,"sources":["components/GlobalStyles.js","components/Header.js","components/Loader.js","components/Footer.js","components/Palette.js","components/Item.js","components/Description.js","components/Layer.js","App.js","index.js"],"names":["globalStyles","createGlobalStyle","reset","Header","styled","header","Title","h1","Text","div","Loader","Footer","footer","PaletteDiv","Color","Palette","state","loading","paletteList","rgbToHex","r","g","b","toString","slice","this","ImagePalette","Pixels","props","src","colors","forEach","color","push","console","log","setState","map","palette","key","style","backgroundColor","onClick","e","copy","Component","Item","OriginalTitle","KORTitle","span","Image","img","original_title","title","Description","p","description","frames","keyframes","Layer","attrs","scrollY","LayerText","LayerHex","Container","App","imageList","page","clicked","_copy","temp","document","createElement","value","querySelector","append","select","execCommand","remove","window","setTimeout","axios","get","params","api_key","language","region","data","results","image","backdrop_path","api","GlobalStyles","offset","onBottom","pageUpdate","bind","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.35fa30dd.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    @import url(\"https://fonts.googleapis.com/css?family=Noto+Sans+KR\");\n\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family: \"Noto Sans KR\", sans-serif;\n        font-size:12px;\n        text-align:center;\n        background-color:rgba(0,0,0,0.02);\n    }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header``;\n\nconst Title = styled.h1`\n  color: #811b21;\n  padding: 20px 0px;\n  font-size: 30px;\n  font-weight: 600;\n`;\n\nexport default () => (\n  <Header>\n    <Title>Movie Palette</Title>\n  </Header>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Text = styled.div`\n  width: 100%;\n  height: 120px;\n  padding-top: 50px;\n  text-align: center;\n  font-weight: 600;\n  font-size: 24px;\n`;\n\nconst Loader = () => <Text>Loading...</Text>;\n\nexport default Loader;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Footer = styled.footer`\n  background-color: #aaa;\n  color: white;\n  padding: 20px 0px;\n`;\n\nexport default () => <Footer>Â© Movie Palette</Footer>;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport ImagePalette from \"image-palette\";\nimport Pixels from \"image-pixels\";\nimport Loader from \"./Loader\";\n\nconst PaletteDiv = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n`;\n\nconst Color = styled.div`\n  width: 100%;\n  height: 60px;\n  cursor: pointer;\n  transition: transform 0.15s ease-in-out;\n\n  &:hover {\n    transform: scale(1.6);\n  }\n`;\n\nclass Palette extends Component {\n  state = {\n    loading: true,\n    paletteList: []\n  };\n\n  rgbToHex = (r, g, b) =>\n    \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n\n  async componentDidMount() {\n    const { paletteList } = this.state;\n\n    try {\n      const { colors } = ImagePalette(await Pixels(this.props.src), 11);\n      colors.forEach(color =>\n        paletteList.push(this.rgbToHex(color[0], color[1], color[2]))\n      );\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.state = this.setState({\n        loading: false,\n        paletteList\n      });\n    }\n  }\n\n  render() {\n    const { loading, paletteList } = this.state;\n\n    return loading ? (\n      <Loader />\n    ) : (\n      <PaletteDiv>\n        {paletteList.map(palette => (\n          <Color\n            key={palette}\n            style={{ backgroundColor: palette }}\n            onClick={e => this.props.copy(palette)}\n          />\n        ))}\n      </PaletteDiv>\n    );\n  }\n}\n\nexport default Palette;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Palette from \"./Palette\";\n\nconst Item = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 500px;\n  margin-bottom: 30px;\n  border: 1px solid #ddd;\n  box-shadow: 0px 0px 15px 3px #ddd;\n\n  @media (max-width: 700px) {\n    width: 100%;\n  }\n`;\n\nconst Title = styled.div`\n  white-space: pre-wrap;\n  margin: 15px 0px;\n  font-size: 14px;\n  line-height: 28px;\n`;\n\nconst OriginalTitle = styled.div`\n  font-weight: 600;\n`;\nconst KORTitle = styled.span``;\n\nconst Image = styled.img`\n  width: 100%;\n`;\n\nexport default ({ original_title, title, src, copy }) => (\n  <Item>\n    <Image src={src} />\n    <Palette src={src} copy={copy} />\n    <Title>\n      <OriginalTitle>{original_title}</OriginalTitle>\n      <KORTitle>{title}</KORTitle>\n    </Title>\n  </Item>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Description = styled.p`\n  font-weight: 600;\n  font-size: 14px;\n  padding: 20px 0px;\n`;\n\nexport default ({ description }) => <Description>{description}</Description>;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst frames = keyframes`\n  0% {\n    opacity: 0;\n  }\n\n  50% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n`;\n\nconst Layer = styled.div.attrs(({ color, scrollY }) => ({\n  color,\n  scrollY\n}))`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100vh;\n  position: absolute;\n  top: ${props => props.scrollY + \"px\"};\n  left: 0px;\n  font-weight: bold;\n  color: white;\n  animation-duration: 1.2s;\n  animation-name: ${frames};\n  background-color: ${props => props.color};\n`;\n\nconst LayerText = styled.div`\n  font-size: 64px;\n`;\n\nconst LayerHex = styled.div`\n  margin-top: 1.5em;\n  font-size: 32px;\n`;\n\nexport default ({ color, scrollY }) => (\n  <Layer color={color} scrollY={scrollY}>\n    <LayerText>Copied!</LayerText>\n    <LayerHex>{color}</LayerHex>\n  </Layer>\n);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport GlobalStyles from \"./components/GlobalStyles\";\nimport Header from \"./components/Header\";\nimport Loader from \"./components/Loader\";\nimport Footer from \"./components/Footer\";\nimport Item from \"./components/Item\";\nimport Description from \"./components/Description\";\nimport Layer from \"./components/Layer\";\nimport styled from \"styled-components\";\nimport BottomScrollListener from \"react-bottom-scroll-listener\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nclass App extends Component {\n  state = {\n    loading: true,\n    imageList: [],\n    page: 1,\n    clicked: false,\n    color: null,\n    scrollY: 0,\n  };\n\n  _copy = (color) => {\n    const temp = document.createElement(\"input\");\n    temp.value = color;\n    document.querySelector(\"body\").append(temp);\n    temp.select();\n    document.execCommand(\"copy\");\n    temp.remove();\n\n    this.setState({\n      clicked: true,\n      color,\n      scrollY: window.scrollY,\n    });\n\n    setTimeout(\n      () =>\n        this.setState({\n          clicked: false,\n        }),\n      1200\n    );\n  };\n\n  async api() {\n    const { imageList, page } = this.state;\n\n    try {\n      const { data: images } = await axios.get(\n        \"https://api.themoviedb.org/3/movie/popular\",\n        {\n          params: {\n            api_key: \"dbfc56cf620be872eccb06fc5c5b8e53\",\n            language: \"ko\",\n            region: \"KR\",\n            page,\n          },\n        }\n      );\n\n      images.results.forEach((image) => {\n        imageList.push({\n          original_title: image.original_title,\n          title: image.title,\n          src: \"https://image.tmdb.org/t/p/w500\" + image.backdrop_path,\n        });\n      });\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.setState({\n        loading: false,\n        imageList,\n        page,\n      });\n    }\n  }\n\n  async componentDidMount() {\n    await this.api();\n  }\n\n  async pageUpdate() {\n    const { imageList, page } = this.state;\n\n    this.setState({\n      loading: true,\n      imageList,\n      page: page + 1,\n    });\n\n    await this.api();\n  }\n\n  render() {\n    const { loading, imageList, clicked, color, scrollY } = this.state;\n\n    return (\n      <>\n        <GlobalStyles />\n        <Header />\n        <Description description={\"ð¨ Click the palette to copy !\"} />\n\n        <Container>\n          {imageList\n            ? imageList.map((image) => (\n                <Item\n                  original_title={image.original_title}\n                  title={image.title}\n                  src={image.src}\n                  key={image.src}\n                  copy={this._copy}\n                />\n              ))\n            : null}\n        </Container>\n\n        {loading ? <Loader /> : null}\n\n        <Description description={\"â¤ï¸ï¸ï¸ï¸ï¸ï¸ Thank you â¤ï¸\"} />\n        <Footer />\n        <BottomScrollListener\n          offset={900}\n          onBottom={this.pageUpdate.bind(this)}\n        />\n        {clicked ? <Layer color={color} scrollY={scrollY} /> : null}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}